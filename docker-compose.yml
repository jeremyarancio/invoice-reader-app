x-db-env: &db-env
    POSTGRES_USER: ${POSTGRES_USER:-postgres}
    POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    POSTGRES_DB: ${POSTGRES_DB:-postgres}

name: invoice

services:
    postgres:
        container_name: invoice-postgres
        restart: unless-stopped
        image: postgres:17.2-alpine
        environment: *db-env
        ports:
            - 5432:5432
        volumes:
            - postgres_data:/var/lib/postgresql/data
        networks:
            - app-network

    server:
        container_name: invoice-server
        build:
            context: ./server
            target: dev # Use the dev build stage
        ports:
            - 8000:8000
        env_file:
            - "./server/.env"
        volumes:
            - ./server/src:/app/src
            - ./server/.aws:/root/.aws # Mount AWS User credentials to Docker Compose
        depends_on:
            - postgres
        networks:
            - app-network

    prometheus:
        container_name: prometheus
        image: prom/prometheus
        ports:
            - "9090:9090"
        volumes:
            - ./server/prometheus.yml:/etc/prometheus/prometheus.yml
        command:
            - "--config.file=/etc/prometheus/prometheus.yml"
        depends_on:
            - server
        networks:
            - app-network

    grafana:
        container_name: grafana
        image: grafana/grafana
        ports:
            - "3000:3000"
        volumes:
            - grafana-storage:/var/lib/grafana
        depends_on:
            - prometheus
        networks:
            - app-network

volumes:
    postgres_data:
    grafana-storage:

networks:
    app-network:
        driver: bridge
