x-db-env: &db-env
    POSTGRES_USER: ${POSTGRES_USER:-postgres}
    POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    POSTGRES_DB: ${POSTGRES_DB:-postgres}

name: invoice

services:
    traefik:
        image: traefik:v3.4
        container_name: traefik
        ports:
            - 80:80
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
        networks:
            - app-network

    postgres:
        restart: unless-stopped
        image: postgres:17.2-alpine
        environment: *db-env
        volumes:
            - postgres_data:/var/lib/postgresql/data
        networks:
            - app-network

    ui:
        build:
            context: ./ui
            target: dev
        networks:
            - app-network
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.ui.rule=Host(`app.${DOMAIN_NAME:-localhost}`)"
            - "traefik.http.services.ui.loadbalancer.server.port=5173"

    server:
        build:
            context: ./server
            target: dev
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.server.rule=Host(`api.${DOMAIN_NAME:-localhost}`)"
            - "traefik.http.services.server.loadbalancer.server.port=8000"
        depends_on:
            - postgres
        networks:
            - app-network

    ml-server:
        build:
            context: ./ml-server
            target: dev
        networks:
            - app-network

    prometheus:
        container_name: prometheus
        image: prom/prometheus
        volumes:
            - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
        command:
            - "--config.file=/etc/prometheus/prometheus.yml"
        depends_on:
            - server
        networks:
            - app-network

    grafana:
        container_name: grafana
        image: grafana/grafana
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.grafana.rule=Host(`monitor.${DOMAIN_NAME:-localhost}`)"
        volumes:
            - grafana-storage:/var/lib/grafana
            - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
        depends_on:
            - prometheus
        networks:
            - app-network

volumes:
    postgres_data:
    grafana-storage:

networks:
    app-network:
        driver: bridge
