name: CI

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ '**' ]

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      ui: ${{ steps.changes.outputs.ui }}
      server: ${{ steps.changes.outputs.server }}
      ml-server: ${{ steps.changes.outputs.ml-server }}
    steps:
    - uses: actions/checkout@v4
    - uses: dorny/paths-filter@v3
      id: changes
      with:
        filters: |
          ui:
            - 'ui/**'
          server:
            - 'server/**'
          ml-server:
            - 'ml-server/**'

  server-lint-and-test:
    needs: changes
    if: needs.changes.outputs.server == 'true'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./server

    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"

    - name: Set up Python
      run: uv python install 3.12

    - name: Install dependencies
      run: uv sync --dev

    - name: Run ruff check
      run: uvx ruff check --fix
        
    - name: Run ruff format check
      run: uvx ruff format .

    - name: Run tests
      run: uv run pytest -vv

  ml-server-lint-and-test:
    needs: changes
    if: needs.changes.outputs.ml-server == 'true'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./ml-server

    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"

    - name: Set up Python
      run: uv python install 3.12

    - name: Install dependencies
      run: uv sync --dev

    - name: Run ruff check
      run: uvx ruff check --fix
        
    - name: Run ruff format check
      run: uvx ruff format .

    - name: Run tests
      run: uv run pytest -vv

  docker-build-test:
    needs: [changes, server-lint-and-test, ml-server-lint-and-test]
    if: always() && !cancelled() && !failure()
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build UI Docker image
      if: needs.changes.outputs.ui == 'true'
      run: docker build -t invoice-ui ./ui

    - name: Build Server Docker image
      if: needs.changes.outputs.server == 'true'
      run: docker build -t invoice-server --target prod ./server

    - name: Build ML Server Docker image
      if: needs.changes.outputs.ml-server == 'true'
      run: docker build -t invoice-ml-server ./ml-server